name: Build and Push Docker Image and Helm Chart on Release

on:
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: terascope/tjsc
  CHART_NAME: terascope/tjsc-chart

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: 'latest'

      - name: Update Helm chart version
        run: |
          # Extract version from release tag (remove 'v' prefix if present)
          VERSION=${GITHUB_REF#refs/tags/}
          VERSION=${VERSION#v}
          
          # Update Chart.yaml with release version
          sed -i "s/^version:.*/version: $VERSION/" helm/Chart.yaml
          sed -i "s/^appVersion:.*/appVersion: \"$VERSION\"/" helm/Chart.yaml

      - name: Package and push Helm chart
        run: |
          # Extract version from release tag
          VERSION=${GITHUB_REF#refs/tags/}
          VERSION=${VERSION#v}
          
          # Package the chart
          helm package helm/
          
          # Push to OCI registry
          helm push teraslice-job-settings-controller-$VERSION.tgz oci://${{ env.REGISTRY }}/${{ env.CHART_NAME }}